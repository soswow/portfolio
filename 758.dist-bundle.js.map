{"version":3,"file":"758.dist-bundle.js","mappings":"iNAKWA,EAA4B,WACrC,SAASA,EAAaC,IACpB,OAAgBC,KAAMF,IAEtB,OAAgBE,KAAM,UAAW,KAEjC,OAAgBA,KAAM,OAAQ,IAE9B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,IAAgBE,EAClCD,KAAKE,QAAQC,KAAKH,KAAKI,gBA0G3B,OAtGA,OAAaN,EAAc,CAAC,CAC1BO,IAAK,OACLC,MAAO,SAAcC,GACnB,OAAOP,KAAKQ,sBAAsBD,KAEnC,CACDF,IAAK,eACLC,MAAO,WACL,IAAIG,EAAQT,KAERU,EAAS,mBACTC,EAAe,CACjBD,OAAQA,EACRE,WAAY,GAKd,OAHAF,EAAOG,iBAAiB,WAAW,SAAUC,GAC3CL,EAAMM,oBAAoBD,EAAOH,MAE5BA,IAER,CACDN,IAAK,sBACLC,MAAO,SAA6BQ,EAAOH,GACzC,IAAIK,EAAKF,EAAMG,KAAKD,GAEpB,GAAIhB,KAAKkB,KAAKF,GAAK,CACjB,IAAIG,EAAgBnB,KAAKkB,KAAKF,GAC1BI,EAAUD,EAAcC,QACxBC,EAASF,EAAcE,cACpBrB,KAAKkB,KAAKF,GACjBL,EAAaC,aAETE,EAAMG,KAAKK,MAGbD,EAAOP,EAAMG,KAAKK,OAElBF,EAAQN,EAAMG,KAAKM,SAIxB,CACDlB,IAAK,wBACLC,MAAO,SAA+BkB,GACpC,IAAIC,EAASzB,KAET0B,EAAQ,MACZ,OAAO,IAAIC,SAAQ,SAAUP,EAASC,GACpCI,EAAOP,KAAKQ,GAAS,CACnBN,QAASA,EACTC,OAAQA,GAGV,IAAIX,EAASe,EAAOG,uBAEpBH,EAAOI,SAASH,EAAOhB,EAAQc,QAGlC,CACDnB,IAAK,WACLC,MAAO,SAAkBoB,EAAOf,EAAcmB,GAC5CnB,EAAaC,aACb,IAAIF,EAASC,EAAaD,OAQ1B,GAAIqB,UAAUC,UAAUC,QAAQ,WAAa,IAAgD,IAA3CF,UAAUC,UAAUC,QAAQ,UAAkB,CAC9F,IAAIC,EAAK,IAAIC,WAUb,OARAD,EAAGE,OAAS,WACV1B,EAAO2B,YAAY,CACjBrB,GAAIU,EACJT,KAAMiB,EAAGI,eAIbJ,EAAGK,mBAAmBT,GAIxBpB,EAAO2B,YAAY,CACjBrB,GAAIU,EACJT,KAAMa,MAGT,CACDzB,IAAK,uBACLC,MAAO,WACL,OAAON,KAAKE,QAAQsC,QAAO,SAAUC,EAASC,GAC5C,OAAIA,EAAK9B,WAAa6B,EAAQ7B,WACrB8B,EAGFD,IACNzC,KAAKE,QAAQ,QAIbJ,EAnH8B","sources":["webpack://website/./node_modules/@atlaskit/media-client/dist/esm/utils/hashing/workerHasher.js"],"sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport uuidV4 from 'uuid/v4';\nimport Rusha from 'rusha';\nexport var WorkerHasher = /*#__PURE__*/function () {\n  function WorkerHasher(numOfWorkers) {\n    _classCallCheck(this, WorkerHasher);\n\n    _defineProperty(this, \"workers\", []);\n\n    _defineProperty(this, \"jobs\", {});\n\n    for (var i = 0; i < numOfWorkers; ++i) {\n      this.workers.push(this.createWorker());\n    }\n  }\n\n  _createClass(WorkerHasher, [{\n    key: \"hash\",\n    value: function hash(chunk) {\n      return this.calculateHashInWorker(chunk);\n    }\n  }, {\n    key: \"createWorker\",\n    value: function createWorker() {\n      var _this = this;\n\n      var worker = Rusha.createWorker();\n      var hasherWorker = {\n        worker: worker,\n        activeJobs: 0\n      };\n      worker.addEventListener('message', function (event) {\n        _this.handleWorkerMessage(event, hasherWorker);\n      });\n      return hasherWorker;\n    }\n  }, {\n    key: \"handleWorkerMessage\",\n    value: function handleWorkerMessage(event, hasherWorker) {\n      var id = event.data.id;\n\n      if (this.jobs[id]) {\n        var _this$jobs$id = this.jobs[id],\n            resolve = _this$jobs$id.resolve,\n            reject = _this$jobs$id.reject;\n        delete this.jobs[id];\n        hasherWorker.activeJobs--;\n\n        if (event.data.error) {\n          // TODO previously we were just calling it again.\n          // this.calculateHashInWorker(chunk);\n          reject(event.data.error);\n        } else {\n          resolve(event.data.hash);\n        }\n      }\n    }\n  }, {\n    key: \"calculateHashInWorker\",\n    value: function calculateHashInWorker(blob) {\n      var _this2 = this;\n\n      var jobId = uuidV4();\n      return new Promise(function (resolve, reject) {\n        _this2.jobs[jobId] = {\n          resolve: resolve,\n          reject: reject\n        };\n\n        var worker = _this2.getMostRelaxedWorker();\n\n        _this2.dispatch(jobId, worker, blob);\n      });\n    }\n  }, {\n    key: \"dispatch\",\n    value: function dispatch(jobId, hasherWorker, chunkBlob) {\n      hasherWorker.activeJobs++;\n      var worker = hasherWorker.worker;\n      /*\n       * postMessage() with chunk blob in Safari results in the error\n       * \"Failed to load resource: The operation could not be completed. (WebKitBlobResource error 1.)\"\n       *\n       * To prevent it, we read the data from the blob using FileReader and pass it via postMessage to the worker.\n       */\n\n      if (navigator.userAgent.indexOf('Safari') > -1 && navigator.userAgent.indexOf('Chrome') === -1) {\n        var rd = new FileReader();\n\n        rd.onload = function () {\n          worker.postMessage({\n            id: jobId,\n            data: rd.result\n          });\n        };\n\n        rd.readAsBinaryString(chunkBlob);\n        return;\n      }\n\n      worker.postMessage({\n        id: jobId,\n        data: chunkBlob\n      });\n    }\n  }, {\n    key: \"getMostRelaxedWorker\",\n    value: function getMostRelaxedWorker() {\n      return this.workers.reduce(function (current, next) {\n        if (next.activeJobs < current.activeJobs) {\n          return next;\n        }\n\n        return current;\n      }, this.workers[0]);\n    }\n  }]);\n\n  return WorkerHasher;\n}();"],"names":["WorkerHasher","numOfWorkers","this","i","workers","push","createWorker","key","value","chunk","calculateHashInWorker","_this","worker","hasherWorker","activeJobs","addEventListener","event","handleWorkerMessage","id","data","jobs","_this$jobs$id","resolve","reject","error","hash","blob","_this2","jobId","Promise","getMostRelaxedWorker","dispatch","chunkBlob","navigator","userAgent","indexOf","rd","FileReader","onload","postMessage","result","readAsBinaryString","reduce","current","next"],"sourceRoot":""}