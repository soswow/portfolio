{"version":3,"file":"123.dist-bundle.js","mappings":"0KAGWA,EAA4B,WACrC,SAASA,KACP,OAAgBC,KAAMD,GAmBxB,OAhBA,OAAaA,EAAc,CAAC,CAC1BE,IAAK,OACLC,MAAO,SAAcC,GACnB,OAAO,IAAIC,SAAQ,SAAUC,EAASC,GACpC,IAAIC,EAAS,IAAIC,WACjBD,EAAOE,kBAAkBN,GAEzBI,EAAOG,OAAS,WACdL,EAAQ,eAAmBM,OAAOJ,EAAOK,QAAQC,OAAO,SAG1DN,EAAOO,QAAUR,SAKhBP,EArB8B","sources":["webpack://website/./node_modules/@atlaskit/media-client/dist/esm/utils/hashing/simpleHasher.js"],"sourcesContent":["import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport * as Rusha from 'rusha';\nexport var SimpleHasher = /*#__PURE__*/function () {\n  function SimpleHasher() {\n    _classCallCheck(this, SimpleHasher);\n  }\n\n  _createClass(SimpleHasher, [{\n    key: \"hash\",\n    value: function hash(blob) {\n      return new Promise(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.readAsArrayBuffer(blob);\n\n        reader.onload = function () {\n          resolve(Rusha.createHash().update(reader.result).digest('hex'));\n        };\n\n        reader.onerror = reject;\n      });\n    }\n  }]);\n\n  return SimpleHasher;\n}();"],"names":["SimpleHasher","this","key","value","blob","Promise","resolve","reject","reader","FileReader","readAsArrayBuffer","onload","update","result","digest","onerror"],"sourceRoot":""}